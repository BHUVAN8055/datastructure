#include <stdio.h>
#include<stdlib.h>
struct node{
    struct node *next,*prev;
    int data;
}*first;
int m,size=0;

void create()
{ 
    int i=1,j=size,x;
  struct node*last,*t;
  first=(struct node*)malloc(sizeof(struct node));
  printf("enter node %d data ",i++);
  scanf("%d",&x);
  first->data=x;
  first->next=NULL;
  first->prev=NULL;
  last=first;
  
  while(--j){
      printf("enter node %d data ",i++);
      scanf("%d",&x);
     t=(struct node*)malloc(sizeof(struct node));
     t->data=x;
     t->prev=last;
     t->next=NULL;
     last->next=t;
     last=t;
      
  }
}
  
  void insert(int index,int x)
  {
     struct node *p=first,*t;
     int i;
     for(i=1;i<=index;i++){
         if(index==1){
          t=(struct node*)malloc(sizeof(struct node));
          t->next=first;
          first->prev=t;
          t->data=x;
          t->prev=NULL;
          first=t;
          break;
         }
         
         if(i==index-1)
         {
          t=(struct node*)malloc(sizeof(struct node));
          t->data=x;
          t->prev=p;
          t->next=p->next;
          p->next=t;
          
         }
         p=p->next;
     }
     m++;
  }
  void search(int x)
  {
      struct node*p=first;
      int l=0;
      while(p)
      {
          if(p->data==x)
          {
              printf("element is found\n");
              l=1;
              break;
          }
          p=p->next;
      }
      if(l==0)
      printf("element not found\n");
  }
  
  
  void delete(int index)
  {
      struct node *p=first,*q=first->next,*t;
      int i;
      for(i=1;i<=index;i++)
      {
          if(index==1)
          {
              first=first->next;
              first->prev=NULL;
              break;
          }
          else if(i==index-1)
          {
           p->next=q->next;
           (q->next)->prev=p;
          }
          p=p->next;
          q=q->next;
      }
      m--;
  }
  
  void deletev( int x)
  {
       struct node*p=first;
       int i=1;
       int l=0;
       
      while(p)
      {
          if(p->data==x)
          {
              printf("element is found and deleted\n");
              delete(i);
              l=1;
              break;
          }
          p=p->next;
          i++;
      }
      if(l==0)
      printf("element not found\n");
      m--;
  }
  
  void display()
  {
      struct node *p=first;
      while(p)
      {
          printf("%d ",p->data);
          p=p->next;
      }
      printf("\n");
  }
  
  


int main()
{
    int ch,x,i;
    
    printf("enter number of nodes u wud like to create\n");
    scanf("%d",&size);
    m=size;
    create();
    
    while(1)
    {
        printf("enter 1 to insert at begining\n 2.insert inbetween\n 3.delete at begining\n 4.delete at end \n5.search\n 6.search and delete for a value\n 7..display\n 8.break\n");
        scanf("%d",&ch);
        if(ch==1)
        {
            printf("enter the element to be inserted\n");
            scanf("%d",&x);
            insert(1,x);
        }
        else if(ch==2)
        {
            printf("enter the index where u wud like to insert\n");
            scanf("%d",&i);
         printf("enter the element to be inserted\n");
            scanf("%d",&x);
            insert(i,x);   
        }
        else if(ch==3)
        {
            delete(1);
        }
        else if(ch==4)
        delete(m);
        
        else if(ch==5)
        {
            printf("enter the value to be searched\n");
            scanf("%d",&x);
            search(x);
        }
        else if(ch==6)
        {
            printf("enter the value to be searched and delted\n");
            scanf("%d",&x);
            deletev(x);
        }
        else if(ch==7)
        display();
        
        else if(ch==8) 
        break;
    }

    return 0;
}

